@startuml PokemonDB

class Pokemon {
    {static}+INTEGER PokedexID,
    +TEXT Name,
    +INTEGER GenderDistribution,
    +BOOLEAN Legendary,
}
class PokemonEvolutions{
    ---
    ~Base,
    ~Evolution,
}
class PokemonAppearance{
    {static}+INTEGER ID,
    +INTEGER BaseHP,
    +INTEGER BaseSpeed,
    +INTEGER BaseAttack,
    +INTEGER BaseDefence,
    +INTEGER BaseSpAttack,
    +INTEGER BaseSpDefence,
    ---
    ~Pokemon,
    ~Game,
}
class PokemonCanLearn{
    +INTEGER AtLevel,
    ---
    ~Appearance,
    ~Attack,
}
class Types{
    {static}+TEXT Name,
}
class TypeMatchups{
    +INTEGER EffectivenessMultiplier,
    ---
    ~Self,
    ~Other,
}
class Attacks{
    {static}+TEXT Name,
    +INTEGER Priority,
    +INTEGER Accuracy,
    +INTEGER? TMNumber,
    +INTEGER PP,
    +INTEGER Power,
}
class AttackTypes{
    ---
    ~Attack,
    ~Type
}
class Media{
    {static}+INTEGER ID,
    +TEXT Filename,
    +BLOB Data,
    ---
    ~Pokemon,
    ~MIMEType,
}
class MIMETypes{
    {static}+TEXT MIMEString,
    +TEXT FriendlyName,
    +TEXT Extension,
}
class Games{
    {static}+TEXT Name,
    +DATE ReleaseDate,
    ---
    ~Platform
}
class Platforms{
    {static}+TEXT Name,
}

note "Since these tables essentially represent matricies\nit doesn't really make sense to have a primary key\nas their only value is in reference of one of their foriegn keys" as MatrixNote
MatrixNote..PokemonCanLearn
MatrixNote..AttackTypes
MatrixNote..TypeMatchups
MatrixNote..PokemonEvolutions

Platforms::Name --* Games::Platform
Pokemon::PokedexID --* Media::Pokemon
Pokemon::PokedexID --* PokemonAppearance::Pokemon
Pokemon::PokedexID --* PokemonEvolutions::Base
Pokemon::PokedexID --* PokemonEvolutions::Evolution
Games::Name --* PokemonAppearance::Game
PokemonAppearance::ID --* PokemonCanLearn::Appearance
Attacks::Name --* PokemonCanLearn::Attack
Attacks::Name --* AttackTypes::Attack
Types::Name --* AttackTypes::Type
Types::Name --* TypeMatchups::Self
Types::Name --* TypeMatchups::Other
Media::MIMEType -- MIMETypes::MIMEString
@enduml